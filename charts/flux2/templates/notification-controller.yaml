{{- if and .Values.notificationController.create }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: {{ .Release.Namespace | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote  }}
    app.kubernetes.io/part-of: flux
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    control-plane: controller
  name: notification-controller
spec:
  {{- if kindIs "invalid" .Values.notificationController.replicas }}
  replicas: 1
  {{- else }}
  replicas: {{ .Values.notificationController.replicas  }}
  {{- end}}
  selector:
    matchLabels:
      app: notification-controller
  template:
    metadata:
      {{- with .Values.notificationController.annotations }}
      annotations: {{ toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: notification-controller
{{ with .Values.notificationController.labels }}{{ toYaml . | indent 8 }}{{ end }}
    spec:
      automountServiceAccountToken: {{ .Values.notificationController.serviceAccount.automount }}
      {{- if .Values.notificationController.initContainers}}
      initContainers:
        {{- toYaml .Values.notificationController.initContainers | nindent 8}}
      {{- end}}
      containers:
      - args:
        {{- if .Values.multitenancy.enabled }}
        - --no-cross-namespace-refs=true
        {{- end}}
        - --watch-all-namespaces={{ .Values.watchAllNamespaces }}
        - --log-level={{ .Values.logLevel | default "info" }}
        - --log-encoding=json
        - --enable-leader-election
        {{- range .Values.notificationController.container.additionalArgs }}
        - {{ . }}
        {{- end}}
        env:
        - name: RUNTIME_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: {{ template "template.image" .Values.notificationController }}
        {{- if .Values.notificationController.imagePullPolicy }}
        imagePullPolicy: {{ .Values.notificationController.imagePullPolicy }}
        {{- else }}
        imagePullPolicy: IfNotPresent
        {{- end }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: healthz
        name: manager
        ports:
        - containerPort: 9090
          name: http
          protocol: TCP
        - containerPort: 9292
          name: http-webhook
          protocol: TCP
        - containerPort: 8080
          name: http-prom
          protocol: TCP
        - containerPort: 9440
          name: healthz
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: healthz
        {{- with .Values.notificationController.resources }}
        resources: {{ toYaml . | nindent 10 }}
        {{- end }}
        {{- if .Values.notificationController.securityContext }}
        securityContext: {{ toYaml .Values.notificationController.securityContext | nindent 10 }}
        {{- else }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        {{- end}}
        volumeMounts:
        - mountPath: /tmp
          name: temp
        {{- if .Values.notificationController.volumeMounts }}
        {{- toYaml .Values.notificationController.volumeMounts | nindent 8 }}
        {{- end}}
      {{- if .Values.notificationController.priorityClassName }}
      priorityClassName: {{ .Values.notificationController.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.notificationController.podSecurityContext }}
      securityContext: {{ toYaml .Values.notificationController.podSecurityContext | nindent 8 }}
      {{- end }}
      serviceAccountName: notification-controller
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets: {{ toYaml .Values.imagePullSecrets | nindent 6 }}
      {{- end }}
      terminationGracePeriodSeconds: 10
      volumes:
      - emptyDir: {}
        name: temp
      {{- if .Values.notificationController.volumes }}
      {{- toYaml .Values.notificationController.volumes | nindent 6 }}
      {{- end}}
      {{- with .Values.notificationController.nodeSelector }}
      nodeSelector: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.notificationController.affinity }}
      affinity: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.notificationController.tolerations }}
      tolerations: {{ toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
